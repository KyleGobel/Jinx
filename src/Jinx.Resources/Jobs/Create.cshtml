@inherits ServiceStack.Razor.ViewPage
    @{
        ViewBag.Title = "Create Job";
        Layout = "~/Views/Shared/Layout.cshtml";
    }

    @section head {
        <style>
            .ace_editor {
                height: 300px;
            }
        </style>
    }
    <div ng-app="jinx" ng-controller="jobCtrl">
        <div class="container">
            <div ng-include="'/templates/generalJobProperties.html'"></div>
            <div ng-include="'/templates/model.html'"></div>
            <div ng-include="'/templates/sourceDatabaseAndQuery.html'"></div>
            <div ng-include="'/templates/sourceDataModel.html'"></div>
            <div ng-include="'/templates/destinationDatabase.html'"></div>
            <div ng-include="'/templates/mapReduce.html'"></div>
            <div class="row">
                <div class="col-md-12" style="text-align:right">
                    <button class="btn btn-primary btn-lg" ng-click="addJob()">Save</button>
                </div>
            </div>
        </div>
    </div>


    @section scripts {
        <script>
            angular.module("jinx", ['ui.ace', 'api'])
                .controller("jobCtrl", function($scope, jobApi, databaseApi, compileApi) {
                    init();

                    function init() {
                        $scope.job = {};
                        $scope.modal = {};
                        $scope.viewModel = {};
                        $scope.aceOption = {
                            useWrapMode: true,
                            mode: 'sql',
                            theme: 'github',
                        }

                        databaseApi.getAll()
                            .then(function(results) {
                                $scope.viewModel.databases = results;
                            }, function(error) {
                                toastr.error(error);
                            });
                        $scope.viewModel.hours = 1;
                        $scope.viewModel.minutes = 0;
                        $scope.job.destinationModelCs = "public class DestinationModel\n{\n\t//Destination table columns here\n}";
                        $scope.job.mapCs = "using System.Collections.Generic;\n\npublic class Transformer\n{\n\tpublic static List<DestinationModel> Transform(List<SourceModel> data)\n\t{\n\t\t//transform data here\n\t}\n}";
                    }

                    $scope.addJob = function() {
                        if (typeof $scope.viewModel.sourceDatabase.databaseId === "undefined") {
                            toastr.error("Must select a database");
                        }
                        $scope.job.interval = ($scope.viewModel.hours * 3600000) + ($scope.viewModel.minutes * 60000);
                        $scope.job.sourceDatabaseId = $scope.viewModel.sourceDatabase.databaseId;
                        $scope.job.destinationDatabaseId = $scope.viewModel.destinationDatabase.databaseId;
                        jobApi.insert($scope.job)
                            .then(function() {
                                toastr.success("Job was created successfully!");
                            }, function(error) {
                                toastr.error(error);
                            });
                    }

                    $scope.buildModel = function() {
                        if (typeof $scope.viewModel.sourceDatabase.databaseId === "undefined") {
                            toastr.error("Must select a database");
                        }
                        $scope.job.sourceDatabaseId = $scope.viewModel.sourceDatabase.databaseId;

                        jobApi.buildModel($scope.job.sourceDatabaseId, $scope.job.sourceSql)
                            .then(function(response) {
                                $scope.job.sourceModelCs = response;
                            }, function(error) {
                                toastr.error(error);
                            });
                    }

                    $scope.compile = function() {
                        compileApi.compileAll($scope.job.sourceModelCs, $scope.job.destinationModelCs, $scope.job.mapCs)
                            .then(function(response) {
                                $scope.modal.title = "Job Compile Results";
                                $scope.modal.body = response;
                                $("#modal").modal();
                            }, function(error) {
                                toastr.error(error);
                            });
                    }

                    $scope.compileDestinationModel = function() {
                        compileApi.compile($scope.job.destinationModelCs, "destinationModel")
                            .then(function(response) {
                                $scope.modal.title = "Destination Model Compile Results";
                                $scope.modal.body = response;
                                $("#modal").modal();
                            }, function(error) {
                                toastr.error(error);
                            });
                    }
                    $scope.compileSourceModel = function() {
                        compileApi.compile($scope.job.sourceModelCs, "sourceModel")
                            .then(function(response) {
                                $scope.modal.title = "Source Model Compile Results";
                                $scope.modal.body = response;
                                $('#modal').modal();
                            }, function(error) {
                                toastr.error(error);
                            });
                    }

                });
        </script>
    }
